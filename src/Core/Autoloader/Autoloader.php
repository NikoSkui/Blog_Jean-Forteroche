<?php

// Autoloader.php @generated by Niko

class Autoloader
{
    private static $namespaces = [];
    private static $autoloadErrors = [];
    static function getLoader()
    {        
        spl_autoload_register(array(__CLASS__,'autoload'));
    }

    static function autoload($class)
    {
        // autoload path Externals Libraries
        $autoload_src = require __DIR__ . '/autoload_src.php';

        // autoload Files
        $includeFiles = require_once __DIR__ . '/autoload_files.php';
        if (is_array($includeFiles)){
            foreach ($includeFiles as $fileIdentifier => $file) {
                if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
                    if (file_exists($file)) {
                        require $file;
                    } else {
                        self::$autoloadErrors[] =  $file . 'n\'existe pas.';
                    } 

                    $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
                }
            }
        }

        // autoload Class psr-4
        $map = require __DIR__ . '/autoload_psr4.php';
        if (strpos($class, '\\') !== false) {
            foreach ($map as $namespace => $path) {
                if(is_array($path)) {
                    $path = trim($path[0]," ");
                } else {
                    $path = trim($path," ");
                }
                if(substr($path,-1) !== '/') {
                    $path .= '/';
                }
                self::$namespaces[$namespace] = $path;
            }
            $class = strtr($class,self::$namespaces);
            $class = str_replace('\\','/',$class);            

            if (file_exists($class . '.php')) {
                require $class . '.php';
            } else {
                self::$autoloadErrors[] =  $class . '.php n\'existe pas.';
            }        
        }
    }

    public static function getAutoloadErrors()
    {
        if (null !== self::$autoloadErrors) {
            return self::$autoloadErrors;
        }
    }

}